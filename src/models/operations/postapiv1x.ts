/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * TODO: grab this from jsdoc and add a default
 */
export type PostApiV1XResponse = {
  /**
   * TODO: This is an unknown type
   */
  executionId?: any | null | undefined;
};

/** @internal */
export const PostApiV1XResponse$inboundSchema: z.ZodType<
  PostApiV1XResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  executionId: z.nullable(z.any()).optional(),
});

/** @internal */
export type PostApiV1XResponse$Outbound = {
  executionId?: any | null | undefined;
};

/** @internal */
export const PostApiV1XResponse$outboundSchema: z.ZodType<
  PostApiV1XResponse$Outbound,
  z.ZodTypeDef,
  PostApiV1XResponse
> = z.object({
  executionId: z.nullable(z.any()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiV1XResponse$ {
  /** @deprecated use `PostApiV1XResponse$inboundSchema` instead. */
  export const inboundSchema = PostApiV1XResponse$inboundSchema;
  /** @deprecated use `PostApiV1XResponse$outboundSchema` instead. */
  export const outboundSchema = PostApiV1XResponse$outboundSchema;
  /** @deprecated use `PostApiV1XResponse$Outbound` instead. */
  export type Outbound = PostApiV1XResponse$Outbound;
}

export function postApiV1XResponseToJSON(
  postApiV1XResponse: PostApiV1XResponse,
): string {
  return JSON.stringify(
    PostApiV1XResponse$outboundSchema.parse(postApiV1XResponse),
  );
}

export function postApiV1XResponseFromJSON(
  jsonString: string,
): SafeParseResult<PostApiV1XResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostApiV1XResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiV1XResponse' from JSON`,
  );
}
